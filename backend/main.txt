*
- Khởi tạo package.json: npm init 
- Express: npm install express
- npm install
- npm install ejs
- npm install body-parser
- npm install -g nodemon
- npm install --save-dev @babel/core
- npm install --save-dev @babel/node
- npm install --save-dev @babel/preset-env
- npm install dotenv --save
- MySQL: npm install --save mysql2
- npm install moment-timezone *****
- upload file (
  + npm install --save multer
  + Có 2 loại lưu file:
    * DiskStorage: Lưu trữ tại mt (Lưu không bị mất khi thoát trình duyệt)
    * MenoryStorge: Lưu tạm thời (Bị mất khi thoát trình duyệt)
)
- Toi giam ten file ../../: npm i -S app-root-path
- MiddleWare: npm install --save-exact morgan@1.10.0
(- Chẳng hạn khi load một trang không tồn tại, sẽ trả về trang 404 not found
 - Hay khi đăng nhập thành công đưa về trang chủ)
*

---
Tạo một trang mới:
- views/name.ejs
- route/web.js
- từ route liên kết sang Controller
---

**CHia sẻ code
.gitigore

1. Modules
1.1 Modules có sẵn
var http = require('http');

http.createServer(function (req, res) {
  res.writeHead(200, {'Content-Type': 'text/html'});
  res.write();
  res.end('...');
}).listen(3000);

1.1.1 Req: đại diện cho yêu cầu từ máy khách, chứa một phần của url xuất hiện sau tên miền

1.1.2 WriteHead: Phương thức mã trạng thái
  - 200: Tất cả đều ổn
  - đối số thứ hai là một đối tượng chứa các tiêu đề phản hồi


1.2 Modules tự tạo
- Sử dụng exports trên một file bên ngoài
VD:
exports.myDateTime = function () {
  return Date();
}
- Sử dụng file bên ngoài
required('./file_name')

2. express
- Sails
- EJS: npm install ejs
- Handlebars: npm install express-handlebars
- Pug: 
- Sửa khi thay đổi: npm i nodemon
- npm install --save-dev sass => npm run watch (watch tu them vao trong package.json)
- node fileName
3. Chú ý
- Code CSS tại app.scss, chạy npm run watch để xem co sự thay đổi hay không
- Liên kết 1 file scss khác vào scss: @import "ten_cung_cap"; // Khong cần đuôi
- body parser npm: phụ thuộc vào qs (query string)
- From data: req.body
- response header: req.query

4. Cập nhật github
* Tao git
- git init
- git add .
- git commit -m 'init project'
- git remote add origin https://github.com/LamTuyetNhu/NodeJS-basic.git
- git push origin master

*
- git checkout -b dev

* Xóa 1 folder
  git add .
  git commit -m "Remove public/css folder"

* Đẩy code một folder lên github
  git add .
  git commit -m 'user npm'
  git push origin dev /  git push origin master
  
  * Thêm một folder lên github
  git add .
  git commit -m "Refactor create routes, app/controller folder"

5. Get method
- Nhận dữ liệu về từ server về client

6. Post method
- Nhận dữ liệu từ client về server

7. Mô hình MVC
- Browser: Là của client yêu cầu một url nào đó
- Còn lại là server
+ routes: express.method(...)
+ Dispatches: ('/path') --> function handler, tham số thứ 1 trong routes
+ Controller: là function, tham số thứ 2 trong routes

8. Tạo một route
- Trong newsController thêm một GET
- Tạo một file .js trong route
- Tại index link file .js vừa tạo

**CRUD: create, read, Update, Delete
post = create: thêm mới dữ liệu
get = read: 
put: đặt
delete

*** Đổi format
npm i prettier lint-staged husky --save-dev
tại package.json
Script: 
"beautiful": "prettier --single-quote --trailing-comma all --write 'src/**/*{js, json, css}'"
..... CÒn nữa

9. Kết nối database
- install: npm install mysql2
- môi trường: 

10. http status 
- 200: ok
- 201: created
- 202: Accepted
.
.
.
- 404: Not found
.
.
.
-501: Server bị sập

Các Bài Đã học:
1. CD mtr NodeJS
2. NPM
3. Express App
4. View Engines
5. Static Files
6. Router & MVC
7. HTTP Request/ Database
8. CRUD
9. RestAPI
10. Uploadfile
11. MiddleWare: Phân quyền người dùng
* Nên học Authentication
NodeJS -> ReactJS -> fullStack (NodeJS + ReactJS)

Deepface
1. cd deepface
  pip install -e .
2. cd ..
  pip install fastapi
  pip install uvicorn